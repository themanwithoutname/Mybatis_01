<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="cn.itheima.mybatis.mapper.UserMapper">
	
	<!-- id:statement的id 或者叫做sql的id-->
	<!-- parameterType:声明输入参数的类型 -->
	<!-- resultType:声明输出结果的类型，应该填写pojo的全路径 -->
	<!-- #{}：输入参数的占位符，相当于jdbc的？ -->
	<select id="findUserById" parameterType="int"
		resultType="User">
		SELECT * FROM user WHERE id  = #{v}
	</select>	
	
	<!-- 根据用户名模糊查询用户列表
	#{}	selct * from user where id=?	占位符	?=='五'
	${value}	selct * from user where username like '%五%'	字符串拼接(大括号中必须用value)
	
			select * from user where username like '%${value}%'
	也可以写：	select * from user where username like "%"#{haha}"%"
	 -->
	<select id="findUserByUsername" parameterType="String" resultType="cn.itheima.mybatis.pojo.User">
		select * from user where username like '%${value}%'
	</select>
	
	<insert id="insertUser" parameterType="cn.itheima.mybatis.pojo.User">
		<selectKey keyProperty="id" resultType="Integer" order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
		
		insert into user(username,sex,birthday,address)
		values(#{username},#{sex},#{birthday},#{address})
	</insert>
	
	<update id="updateUserById" parameterType="cn.itheima.mybatis.pojo.User">
		update user
		set username=#{username},sex=#{sex},address=#{address},birthday=#{birthday}
		where id=#{id}
	</update>
	
	<delete id="deleteUserById" parameterType="Integer">
		delete from user
		where id=#{id}
	</delete>
	
	
</mapper>